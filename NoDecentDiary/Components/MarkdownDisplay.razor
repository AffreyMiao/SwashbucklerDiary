<div @ref="element"></div>

@code {
    public ElementReference element;
    private string _value = default!;
    private Dictionary<string, object> _options = new()
    {
        {"mode", "light"}
    };

    [Inject]
    IJSRuntime JS { get; set; } = default!;

    [Parameter]
    public string Value
    {
        get => _value;
        set => SetValue(value);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RenderingMarkdown(Value);
        }
        base.OnAfterRender(firstRender);
    }

    private void SetValue(string value)
    {
        if (_value != value)
        {
            _value = value;
            RenderingMarkdown(value);
        }
    }

    private async void RenderingMarkdown(string value)
    {
        if (element.Context != null && !string.IsNullOrEmpty(value))
        {
            await JS.InvokeVoidAsync("Vditor.preview", new object[3] { element, value, _options });
        }

    }
}