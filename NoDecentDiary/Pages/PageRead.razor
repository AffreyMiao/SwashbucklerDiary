@page "/Read/{id:int}"

<MAppBar App
         ElevateOnScroll
         Color="white"
         ScrollTarget="#scrolling-read">
    <MButton Icon OnClick="HandOnBack">
        <MIcon>
            mdi-arrow-left
        </MIcon>
    </MButton>

    <MSpacer></MSpacer>
    <MButton Icon
             OnClick="()=>ShowShare=true">
        <MIcon>
            mdi-share-variant-outline
        </MIcon>
    </MButton>
    <MButton Icon
             OnClick="HandOnDelete">
        <MIcon>
            mdi-delete-outline
        </MIcon>
    </MButton>
    <MButton Icon
             OnClick="HandOnEdit">
        <MIcon>
            mdi-pencil
        </MIcon>
    </MButton>

    <MMenu @bind-Value="ShowMenu"
           Rounded="@("lg")"
           Transition="scroll-x-reverse-transition">
        <ActivatorContent>
            <MButton Icon
                     @attributes="@context.Attrs">
                <MultiDisplay>
                    <DesktopContent>
                        <MIcon>mdi-dots-horizontal</MIcon>
                    </DesktopContent>
                    <MobileContent>
                        <MIcon>mdi-dots-vertical</MIcon>
                    </MobileContent>
                </MultiDisplay>
            </MButton>
        </ActivatorContent>

        <ChildContent>
            <MList MinWidth="150">
                <MListItem Dense
                           OnClick="Copy">
                    <MListItemContent>
                        @(I18n!.T("Share.Copy"))
                    </MListItemContent>
                </MListItem>
                <MListItem Dense
                           OnClick="()=>Topping(Diary)">
                    <MListItemContent>
                        @(Top ? I18n!.T("Diary.CancelTop") : I18n!.T("Diary.Top"))
                    </MListItemContent>
                </MListItem>
                <MListItem Dense>
                    <MListItemContent>
                        @(I18n!.T("Diary.Export"))
                    </MListItemContent>
                </MListItem>
            </MList>
        </ChildContent>
    </MMenu>
</MAppBar>

<ScrollContainer Id="scrolling-read">
    <MContainer Id="screenshot">
        <div class="px-3 text-h6 font-weight-bold">
            <span>@(Diary.CreateTime.ToString("yyyy/MM/dd"))</span>
            <span class="pl-5 text-subtitle-1">
                @(Diary.CreateTime.ToWeek(I18n))
            </span>
        </div>
        <div class="px-2">
            @if (ShowWeather)
            {
                <MChip Class="my-2 mr-2" Outlined="Mobile">
                    <MIcon Left>
                        @(GetWeatherIcon(Diary.Weather))
                    </MIcon>
                    @(I18n!.T("Weather." + Diary.Weather))
                </MChip>
            }

            @if (ShowMood)
            {
                <MChip Class="my-2 mr-2" Outlined="Mobile">
                    <MIcon Left>
                        @(GetMoodIcon(Diary.Mood))
                    </MIcon>
                    @(I18n!.T("Mood." + Diary.Mood))
                </MChip>
            }

            @if (ShowLocation)
            {
                <MChip Class="my-2 mr-2" Outlined="Mobile">
                    <MIcon Left>
                        mdi-map-marker-outline
                    </MIcon>
                    @(Diary.Location)
                </MChip>
            }
        </div>

        @if (ShowTitle)
        {
            <MTextField Value="@(Diary.Title)"
                    Class="pb-0 my-sm-4 user-select font-weight-bold"
                    Solo="Mobile"
                    Flat="Mobile"
                    Outlined="Desktop"
                    TValue="string"
                    HideDetails="@("auto")"
                    Dense
                    Readonly
                    maxlength="20">
            </MTextField>
        }

        <MTextarea Value="@(Diary.Content)"
                   Class="my-sm-4 user-select"
                   Solo="Mobile"
                   Flat="Mobile"
                   Outlined="Desktop"
                   HideDetails="@("auto")"
                   Readonly
                   AutoGrow
                   Rows="8"
                   RowHeight="30">
        </MTextarea>

        <div class="mb-5">
            <MChipGroup Column>
                @foreach (var item in SelectedTags)
                {
                    <MChip Outlined="Mobile">
                        @(item.Name)
                    </MChip>
                }
            </MChipGroup>
        </div>
    </MContainer>
</ScrollContainer>

<MDialog @bind-Value="ShowShare" MaxWidth="420">
    <MCard>
        <MCardTitle Class="font-weight-bold">
            @(I18n!.T("Read.SelectShare"))
            <MSpacer></MSpacer>
            <MButton Icon OnClick="()=>ShowShare = false">
                <MIcon>mdi-close</MIcon>
            </MButton>
        </MCardTitle>
        <MCardText>
            <MList>
                <MListItem OnClick="TextShare">
                    <MListItemIcon>
                        <MIcon Class="list-item-icon">
                            mdi-format-text
                        </MIcon>
                    </MListItemIcon>
                    <MListItemContent>
                        <MListItemTitle>
                            @(I18n!.T("Read.TextShare"))
                        </MListItemTitle>
                    </MListItemContent>
                </MListItem>
                <MListItem OnClick="ImageShare">
                    <MListItemIcon>
                        <MIcon Class="list-item-icon">
                            mdi-image-outline
                        </MIcon>
                    </MListItemIcon>
                    <MListItemContent>
                        <MListItemTitle>
                            @(I18n!.T("Read.ImageShare"))
                        </MListItemTitle>
                    </MListItemContent>
                </MListItem>
            </MList>
        </MCardText>
    </MCard>
</MDialog>

<MOverlay Value="showLoading" ZIndex="99">
    <MProgressCircular Indeterminate
                       Size="64"></MProgressCircular>
</MOverlay>

<DeleteDialog @bind-Value="ShowDelete"
              Title="@(I18n!.T("Diary.Delete.Title"))"
              Content="@(I18n!.T("Diary.Delete.Content"))"
              OnOK="()=>HandOnOKDelete?.Invoke()">

</DeleteDialog>