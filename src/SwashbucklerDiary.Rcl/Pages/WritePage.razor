@page "/write"
@namespace SwashbucklerDiary.Rcl.Pages
@inherits ImportantComponentBase

@if (enableMarkdown)
{
    <OnlyThisPage>
        <link href="@cssHref" />
    </OnlyThisPage>
}

<MyAppBar>
    <MButton Icon="true"
             OnClick="NavigateToBack">
        <MIcon>
            mdi-arrow-left
        </MIcon>
    </MButton>

    <MSpacer></MSpacer>

    <MButton @onmousedown:preventDefault
             Icon="true"
             OnClick="InsertTimestamp">
        <MIcon>
            mdi-clock-outline
        </MIcon>
    </MButton>

    <MButton Icon="true"
             OnClick="()=>showSelectTag = true">
        <MIcon>
            mdi-label-outline
        </MIcon>
    </MButton>

    <MultiMenu @bind-Visible="showMenu"
               DynamicListItems="menuItems">
        <ActivatorContent>
            <MButton @attributes="@context.Attrs"
                     Icon="true">
                <MultiDisplay>
                    <DesktopContent>
                        <MIcon>mdi-dots-horizontal</MIcon>
                    </DesktopContent>
                    <MobileContent>
                        <MIcon>mdi-dots-vertical</MIcon>
                    </MobileContent>
                </MultiDisplay>
            </MButton>
        </ActivatorContent>
    </MultiMenu>
</MyAppBar>

<ScrollContainer ContentClass="d-flex flex-column"
                 ContentStyle="height:100%;padding-top:0px;">
    <div>
        <div class="px-3 mb-sm-1 d-flex align-end">
            <button class="d-flex align-center text-h6 font-weight-bold" @onclick="()=>showCreateTime=true">
                @(diary.CreateTime.ToString("d"))
            </button>

            <span class="pl-5 text-subtitle-1">
                @(I18n.ToWeek(diary.CreateTime))
            </span>
            <MSpacer></MSpacer>
            <span class="text-subtitle-1">
                @(CounterValue())
            </span>
        </div>
        <div>
            <MButton Style="letter-spacing:unset;"
                     Text
                     Rounded
                     Ripple="false"
                     OnClick="()=>showWeather=true">
                <MIcon Left Size="20">
                    @(WeatherIcon)
                </MIcon>
                @WeatherText
            </MButton>
            <MButton Style="letter-spacing:unset;"
                     Text
                     Rounded
                     Ripple="false"
                     OnClick="()=>showMood=true">
                <MIcon Left Size="20">
                    @(MoodIcon)
                </MIcon>
                @MoodText
            </MButton>
            <MButton Style="letter-spacing:unset;"
                     Text
                     Rounded
                     Ripple="false"
                     OnClick="()=>showLocation=true">
                <MIcon Left Size="20">
                    mdi-map-marker-outline
                </MIcon>
                @LocationText
            </MButton>
        </div>

    </div>
    @if (enableTitle)
    {
        <MTextField @bind-Value="diary.Title"
                    Class="pb-0 my-sm-4 user-select font-weight-bold flex-grow-0"
                    Solo="Mobile"
                    Flat="Mobile"
                    Outlined="Desktop"
                    TValue="string"
                    HideDetails="@("auto")"
                    Dense="true"
                    spellcheck="false"
                    maxlength="50"
                    Placeholder="@(I18n.T("Write.TitlePlace"))">
        </MTextField>
    }

    <div class="write-input-wrap my-sm-3">
        @if (enableMarkdown)
        {
            <MarkdownEdit @ref="markdownEdit"
                          @bind-Value="diary.Content"
                          WrapClass="write-markdown-wrap"
                          Class="px-3 rounded-lg write-markdown">
            </MarkdownEdit>
        }
        else
        {
            <TextareaEdit @ref="textareaEdit"
                          @bind-Value="diary.Content"
                          Class="rounded-lg">
            </TextareaEdit>
        }
    </div>

    <div class="mb-sm-5 @(SelectedTags.Any()?"":"d-none")">
        <div class="write-chip-group" style="width:100%;">
            @foreach (var item in SelectedTags)
            {
                <MChip Close="true"
                       Outlined="true"
                       OnCloseClick="()=>RemoveSelectedTag(item)">
                    @(item.Name)
                </MChip>
            }
        </div>
    </div>

    @if (enableMarkdown)
    {
        <div class="vditor-toolbar-help"></div>
    }


</ScrollContainer>

<SelectTagsDialog @bind-Visible="showSelectTag"
                  @bind-Value="SelectedTags"
                  @bind-Items="Tags"
                  OnSave="SaveSelectTags">
</SelectTagsDialog>

<SelectIconDialog @bind-Visible="showWeather"
                  @bind-Value="@SelectedWeather"
                  Title="@(I18n.T("Write.SelectWeather"))"
                  Items="WeatherIcons"
                  Text="@(item=>I18n.T("Weather." + item.Key))">
</SelectIconDialog>

<SelectIconDialog @bind-Visible="showMood"
                  @bind-Value="@SelectedMood"
                  Title="@(I18n.T("Write.SelectMood"))"
                  Items="MoodIcons"
                  Text="@(item=>I18n.T("Mood." + item.Key))">
</SelectIconDialog>

<SelectLocationDialog @bind-Visible="showLocation"
                      @bind-Value="SelectedLocation">
</SelectLocationDialog>

<MultiDatePicker @bind-Visible="showCreateTime"
                 @bind-Value="SelectedDate">
</MultiDatePicker>

<MOverlay Value="overlay"
          Opacity="0">
</MOverlay>