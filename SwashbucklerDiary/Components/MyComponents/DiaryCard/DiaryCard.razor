@namespace SwashbucklerDiary.Components
@inherits MyComponentBase

<MHover>
    <MCard @attributes="context.Attrs"
           Class="@($"my-diary-card {(context.Hover?"elevation-sm-2":"")} {Class}")"
           OnClick="()=>OnClick.InvokeAsync(Value)"
           Elevation="0"
           Ripple="false"
           Rounded="@("lg")"
    @oncontextmenu="()=>ShowMenu=true"
           __internal_preventDefault_oncontextmenu>
        <MListItem Dense>
            <MListItemContent>
                <div class="text--secondary" style="font-size:1.1rem;">
                    @(Time.ToString("MM/dd"))
                    <MIcon Class="mx-2">
                        @(GetWeatherIcon(Value?.Weather))
                    </MIcon>
                    <MIcon>
                        @(GetMoodIcon(Value?.Mood))
                    </MIcon>
                </div>
            </MListItemContent>
            <MListItemAction>
                @if (IsTop)
                {
                    <MIcon>
                        mdi-format-vertical-align-top
                    </MIcon>
                }
                <div @onclick:stopPropagation="true">
                    <MultiMenu @bind-Value="ShowMenu" ListItemModels="ListItemModels">
                        <ButtonContent>
                            <MIcon Class="@($"chevron-down {(ShowMenu?"chevron-down-rotate-x":"")}")">
                                mdi-chevron-down
                            </MIcon>
                        </ButtonContent>
                    </MultiMenu>
                </div>
            </MListItemAction>
        </MListItem>
        <MDivider Class="mx-3"></MDivider>
        <MListItem ThreeLine>
            <MListItemContent>
                <div class="my-diary-card-title">
                    @Title
                </div>
                <MListItemSubtitle>
                    @Text
                </MListItemSubtitle>
            </MListItemContent>
        </MListItem>
    </MCard>
</MHover>
